{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst apiExpenses = 'http://localhost:3000/ex';\nconst apiIncome = 'http://localhost:3000/inc';\nconst apiOverview = 'http://localhost:3000/overview';\nconst apiExType = 'http://localhost:3000/extype';\nconst apiIncType = 'http://localhost:3000/inctype';\nconst apiExAmount = 'http://localhost:3000/ex_amount';\nconst apiIncAmount = 'http://localhost:3000/inc_amount';\nconst apiTotalAmount = 'http://localhost:3000/total_amount';\nexport class ApiserviceService {\n  constructor(_http) {\n    this._http = _http;\n  }\n  // EXPENSES\n  getAllEx() {\n    return this._http.get(`${apiExpenses}`).pipe(map(response => {\n      // Format the date field to \"YYYY-MM-DD\" format\n      response.data.forEach(item => {\n        item.exDate = new Date(item.exDate).toISOString().slice(0, 10).replace('T', ' ');\n      });\n      return response;\n    }));\n  }\n  static #_ = this.ɵfac = function ApiserviceService_Factory(t) {\n    return new (t || ApiserviceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiserviceService,\n    factory: ApiserviceService.ɵfac,\n    providedIn: 'root'\n  });\n}\ngetSingleEx(id, any);\nObservable < any > {\n  return: this._http.get(`${apiExpenses}/${id}`)\n};\ncreateEx(data, any);\nObservable < any > {\n  return: this._http.post(`${apiExpenses}`, data)\n};\nupdateEx(data, any, id, any);\nObservable < any > {\n  return: this._http.put(`${apiExpenses}/${id}`, data)\n};\ndeleteEx(id, any);\nObservable < any > {\n  return: this._http.delete(`${apiExpenses}/${id}`)\n};\n// INCOME\ngetAllInc();\nObservable < any > {\n  return: this._http.get(`${apiIncome}`)\n};\ngetSingleInc(id, any);\nObservable < any > {\n  return: this._http.get(`${apiIncome}/${id}`)\n};\ncreateInc(data, any);\nObservable < any > {\n  return: this._http.post(`${apiIncome}`, data)\n};\nupdateInc(data, any, id, any);\nObservable < any > {\n  return: this._http.put(`${apiIncome}/${id}`, data)\n};\ndeleteInc(id, any);\nObservable < any > {\n  return: this._http.delete(`${apiIncome}/${id}`)\n};\n// OVERVIEW\ngetAllOverview();\nObservable < any > {\n  return: this._http.get(`${apiOverview}`)\n};\ngetSingleOverview(id, any);\nObservable < any > {\n  return: this._http.get(`${apiOverview}/${id}`)\n};\n// AMOUNT\ngetExAmount();\nObservable < any > {\n  return: this._http.get(`${apiExAmount}`)\n};\ngetIncAmount();\nObservable < any > {\n  return: this._http.get(`${apiIncAmount}`)\n};\ngetTotalAmount();\nObservable < any > {\n  return: this._http.get(`${apiTotalAmount}`)\n};\n// DATA TYPE\n// ------------------ Expenses type ------------------\ngetAllExType();\nObservable < any > {\n  return: this._http.get(`${apiExType}`)\n};\ngetSingleExType(id, any);\nObservable < any > {\n  return: this._http.get(`${apiExType}/${id}`)\n};\n// ------------------ Income type ------------------\ngetAllIncType();\nObservable < any > {\n  return: this._http.get(`${apiIncType}`)\n};\ngetSingleIncType(id, any);\nObservable < any > {\n  return: this._http.get(`${apiIncType}/${id}`)\n};","map":{"version":3,"names":["Observable","map","apiExpenses","apiIncome","apiOverview","apiExType","apiIncType","apiExAmount","apiIncAmount","apiTotalAmount","ApiserviceService","constructor","_http","getAllEx","get","pipe","response","data","forEach","item","exDate","Date","toISOString","slice","replace","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn","getSingleEx","id","any","return","createEx","post","updateEx","put","deleteEx","delete","getAllInc","getSingleInc","createInc","updateInc","deleteInc","getAllOverview","getSingleOverview","getExAmount","getIncAmount","getTotalAmount","getAllExType","getSingleExType","getAllIncType","getSingleIncType"],"sources":["D:\\Software projects\\Project\\ANGULAR\\aboutMoney-angular\\frontend\\src\\app\\apiservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable  } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst apiExpenses = 'http://localhost:3000/ex';\nconst apiIncome = 'http://localhost:3000/inc';\nconst apiOverview = 'http://localhost:3000/overview';\n\nconst apiExType = 'http://localhost:3000/extype';\nconst apiIncType = 'http://localhost:3000/inctype';\n\nconst apiExAmount = 'http://localhost:3000/ex_amount';\nconst apiIncAmount = 'http://localhost:3000/inc_amount';\nconst apiTotalAmount = 'http://localhost:3000/total_amount';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiserviceService {\n\n  constructor( private _http:HttpClient) { }\n\n  // EXPENSES\n  getAllEx(): Observable<any> {\n    return this._http.get(`${apiExpenses}`).pipe(\n      map((response: any) => {\n        // Format the date field to \"YYYY-MM-DD\" format\n        response.data.forEach((item: any) => {\n          item.exDate = new Date(item.exDate).toISOString().slice(0, 10).replace('T', ' ');\n        });\n\n        return response;\n      })\n    );\n  }\n  }\n  getSingleEx(id:any): Observable<any> {\n    return this._http.get(`${apiExpenses}/${id}`);\n  }\n  createEx(data:any): Observable<any> {\n    return this._http.post(`${apiExpenses}`, data)\n  }\n  updateEx(data: any, id: any): Observable<any> {\n    return this._http.put(`${apiExpenses}/${id}`, data);\n  }\n  deleteEx(id: any): Observable<any> {\n    return this._http.delete(`${apiExpenses}/${id}`);\n  }\n\n  // INCOME\n  getAllInc(): Observable<any> {\n    return this._http.get(`${apiIncome}`);\n  }\n  getSingleInc(id:any): Observable<any> {\n    return this._http.get(`${apiIncome}/${id}`);\n  }\n  createInc(data:any): Observable<any> {\n    return this._http.post(`${apiIncome}`, data)\n  }\n  updateInc(data: any, id: any): Observable<any> {\n    return this._http.put(`${apiIncome}/${id}`, data);\n  }\n  deleteInc(id: any): Observable<any> {\n    return this._http.delete(`${apiIncome}/${id}`);\n  }\n\n  // OVERVIEW\n  getAllOverview(): Observable<any> {\n    return this._http.get(`${apiOverview}`);\n  }\n  getSingleOverview(id:any): Observable<any> {\n    return this._http.get(`${apiOverview}/${id}`);\n  }\n\n  // AMOUNT\n  getExAmount(): Observable<any> {\n    return this._http.get(`${apiExAmount}`);\n  }\n  getIncAmount(): Observable<any> {\n    return this._http.get(`${apiIncAmount}`);\n  }\n  getTotalAmount(): Observable<any> {\n    return this._http.get(`${apiTotalAmount}`);\n  }\n\n  // DATA TYPE\n  // ------------------ Expenses type ------------------\n  getAllExType(): Observable<any> {\n    return this._http.get(`${apiExType}`);\n  }\n  getSingleExType(id:any): Observable<any> {\n    return this._http.get(`${apiExType}/${id}`);\n  }\n  // ------------------ Income type ------------------\n  getAllIncType(): Observable<any> {\n    return this._http.get(`${apiIncType}`);\n  }\n  getSingleIncType(id:any): Observable<any> {\n    return this._http.get(`${apiIncType}/${id}`);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}