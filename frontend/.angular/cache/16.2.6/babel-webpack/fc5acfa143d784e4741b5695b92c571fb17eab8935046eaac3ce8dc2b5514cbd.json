{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst apiExpenses = 'http://localhost:3000/ex';\nconst apiIncome = 'http://localhost:3000/inc';\nconst apiOverview = 'http://localhost:3000/overview';\nconst apiExType = 'http://localhost:3000/extype';\nconst apiIncType = 'http://localhost:3000/inctype';\nconst apiExAmount = 'http://localhost:3000/ex_amount';\nconst apiIncAmount = 'http://localhost:3000/inc_amount';\nconst apiTotalAmount = 'http://localhost:3000/total_amount';\nexport class ApiserviceService {\n  constructor(_http) {\n    this._http = _http;\n  }\n  // EXPENSES\n  getAllEx() {\n    return this._http.get(`${apiExpenses}`);\n  }\n  getSingleEx(id) {\n    return this._http.get(`${apiExpenses}/${id}`);\n  }\n  createEx(data) {\n    return this._http.post(`${apiExpenses}`, data);\n  }\n  updateEx(data, id) {\n    return this._http.put(`${apiExpenses}/${id}`, data);\n  }\n  deleteEx(id) {\n    return this._http.delete(`${apiExpenses}/${id}`);\n  }\n  // INCOME\n  getAllInc() {\n    return this._http.get(`${apiIncome}`);\n  }\n  getSingleInc(id) {\n    return this._http.get(`${apiIncome}/${id}`);\n  }\n  createInc(data) {\n    return this._http.post(`${apiIncome}`, data);\n  }\n  updateInc(data, id) {\n    return this._http.put(`${apiIncome}/${id}`, data);\n  }\n  deleteInc(id) {\n    return this._http.delete(`${apiIncome}/${id}`);\n  }\n  // OVERVIEW\n  getAllOverview() {\n    return this._http.get(`${apiOverview}`);\n  }\n  getSingleOverview(id) {\n    return this._http.get(`${apiOverview}/${id}`);\n  }\n  // AMOUNT\n  getExAmount() {\n    return this._http.get(`${apiExAmount}`);\n  }\n  getIncAmount() {\n    return this._http.get(`${apiIncAmount}`);\n  }\n  getTotalAmount() {\n    return this._http.get(`${apiTotalAmount}`);\n  }\n  // DATA TYPE\n  // ------------------ Expenses type ------------------\n  getAllExType() {\n    return this._http.get < any >> `${apiExType}`;\n  }\n  getSingleExType(id) {\n    return this._http.get(`${apiExType}/${id}`);\n  }\n  // ------------------ Income type ------------------\n  getAllIncType() {\n    return this._http.get(`${apiIncType}`);\n  }\n  getSingleIncType(id) {\n    return this._http.get(`${apiIncType}/${id}`);\n  }\n  static #_ = this.ɵfac = function ApiserviceService_Factory(t) {\n    return new (t || ApiserviceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiserviceService,\n    factory: ApiserviceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["apiExpenses","apiIncome","apiOverview","apiExType","apiIncType","apiExAmount","apiIncAmount","apiTotalAmount","ApiserviceService","constructor","_http","getAllEx","get","getSingleEx","id","createEx","data","post","updateEx","put","deleteEx","delete","getAllInc","getSingleInc","createInc","updateInc","deleteInc","getAllOverview","getSingleOverview","getExAmount","getIncAmount","getTotalAmount","getAllExType","any","getSingleExType","getAllIncType","getSingleIncType","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Software projects\\Project\\ANGULAR\\aboutMoney-angular\\frontend\\src\\app\\apiservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable  } from 'rxjs';\n\nconst apiExpenses = 'http://localhost:3000/ex';\nconst apiIncome = 'http://localhost:3000/inc';\nconst apiOverview = 'http://localhost:3000/overview';\n\nconst apiExType = 'http://localhost:3000/extype';\nconst apiIncType = 'http://localhost:3000/inctype';\n\nconst apiExAmount = 'http://localhost:3000/ex_amount';\nconst apiIncAmount = 'http://localhost:3000/inc_amount';\nconst apiTotalAmount = 'http://localhost:3000/total_amount';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiserviceService {\n\n  constructor( private _http:HttpClient) { }\n\n  // EXPENSES\n  getAllEx(): Observable<any> {\n    return this._http.get(`${apiExpenses}`);\n  }\n  getSingleEx(id:any): Observable<any> {\n    return this._http.get(`${apiExpenses}/${id}`);\n  }\n  createEx(data:any): Observable<any> {\n    return this._http.post(`${apiExpenses}`, data)\n  }\n  updateEx(data: any, id: any): Observable<any> {\n    return this._http.put(`${apiExpenses}/${id}`, data);\n  }\n  deleteEx(id: any): Observable<any> {\n    return this._http.delete(`${apiExpenses}/${id}`);\n  }\n\n  // INCOME\n  getAllInc(): Observable<any> {\n    return this._http.get(`${apiIncome}`);\n  }\n  getSingleInc(id:any): Observable<any> {\n    return this._http.get(`${apiIncome}/${id}`);\n  }\n  createInc(data:any): Observable<any> {\n    return this._http.post(`${apiIncome}`, data)\n  }\n  updateInc(data: any, id: any): Observable<any> {\n    return this._http.put(`${apiIncome}/${id}`, data);\n  }\n  deleteInc(id: any): Observable<any> {\n    return this._http.delete(`${apiIncome}/${id}`);\n  }\n\n  // OVERVIEW\n  getAllOverview(): Observable<any> {\n    return this._http.get(`${apiOverview}`);\n  }\n  getSingleOverview(id:any): Observable<any> {\n    return this._http.get(`${apiOverview}/${id}`);\n  }\n\n  // AMOUNT\n  getExAmount(): Observable<any> {\n    return this._http.get(`${apiExAmount}`);\n  }\n  getIncAmount(): Observable<any> {\n    return this._http.get(`${apiIncAmount}`);\n  }\n  getTotalAmount(): Observable<any> {\n    return this._http.get(`${apiTotalAmount}`);\n  }\n\n  // DATA TYPE\n  // ------------------ Expenses type ------------------\n  getAllExType(): Observable<any[]> {\n    return this._http.get<any>>(`${apiExType}`);\n  }\n  getSingleExType(id:any): Observable<any> {\n    return this._http.get(`${apiExType}/${id}`);\n  }\n  // ------------------ Income type ------------------\n  getAllIncType(): Observable<any[]> {\n    return this._http.get<any>(`${apiIncType}`);\n  }\n  getSingleIncType(id:any): Observable<any> {\n    return this._http.get(`${apiIncType}/${id}`);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}