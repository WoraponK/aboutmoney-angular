{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst apiExpenses = 'http://localhost:3000/ex';\nconst apiIncome = 'http://localhost:3000/inc';\nconst apiOverview = 'http://localhost:3000/overview';\nconst apiExType = 'http://localhost:3000/extype';\nconst apiIncType = 'http://localhost:3000/inctype';\nconst apiExAmount = 'http://localhost:3000/ex_amount';\nconst apiIncAmount = 'http://localhost:3000/inc_amount';\nconst apiTotalAmount = 'http://localhost:3000/total_amount';\nexport class ApiserviceService {\n  constructor(_http) {\n    this._http = _http;\n  }\n  // EXPENSES\n  getAllEx() {\n    return this._http.get(`${apiExpenses}`).pipe(map(response => {\n      // Format the date field to \"YYYY-MM-DD\" format\n      response.data.forEach(item => {\n        // Convert the ISO date to a Date object\n        const isoDate = new Date(item.exDate);\n        isoDate.setDate(isoDate.getDate() + 1);\n        // Format the date as \"YYYY-MM-DD\"\n        const formattedDate = isoDate.toISOString().slice(0, 10);\n        item.exDate = formattedDate;\n      });\n      return response;\n    }));\n  }\n  getSingleEx(id) {\n    return this._http.get(`${apiExpenses}/${id}`);\n  }\n  createEx(extypeID, exAmount) {\n    return this._http.post(`${apiExpenses}`, {\n      extypeID,\n      exAmount\n    });\n  }\n  updateEx(data, id) {\n    return this._http.put(`${apiExpenses}/${id}`, data);\n  }\n  deleteEx(id) {\n    return this._http.delete(`${apiExpenses}/${id}`);\n  }\n  deleteAllEx() {\n    return;\n  }\n  // INCOME\n  getAllInc() {\n    return this._http.get(`${apiIncome}`);\n  }\n  getSingleInc(id) {\n    return this._http.get(`${apiIncome}/${id}`);\n  }\n  createInc(data) {\n    return this._http.post(`${apiIncome}`, data);\n  }\n  updateInc(data, id) {\n    return this._http.put(`${apiIncome}/${id}`, data);\n  }\n  deleteInc(id) {\n    return this._http.delete(`${apiIncome}/${id}`);\n  }\n  // OVERVIEW\n  getAllOverview() {\n    return this._http.get(`${apiOverview}`);\n  }\n  getSingleOverview(id) {\n    return this._http.get(`${apiOverview}/${id}`);\n  }\n  // AMOUNT\n  getExAmount() {\n    return this._http.get(`${apiExAmount}`);\n  }\n  getIncAmount() {\n    return this._http.get(`${apiIncAmount}`);\n  }\n  getTotalAmount() {\n    return this._http.get(`${apiTotalAmount}`);\n  }\n  // DATA TYPE\n  // ------------------ Expenses type ------------------\n  getAllExType() {\n    return this._http.get(`${apiExType}`);\n  }\n  getSingleExType(id) {\n    return this._http.get(`${apiExType}/${id}`);\n  }\n  // ------------------ Income type ------------------\n  getAllIncType() {\n    return this._http.get(`${apiIncType}`);\n  }\n  getSingleIncType(id) {\n    return this._http.get(`${apiIncType}/${id}`);\n  }\n  static #_ = this.ɵfac = function ApiserviceService_Factory(t) {\n    return new (t || ApiserviceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiserviceService,\n    factory: ApiserviceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","apiExpenses","apiIncome","apiOverview","apiExType","apiIncType","apiExAmount","apiIncAmount","apiTotalAmount","ApiserviceService","constructor","_http","getAllEx","get","pipe","response","data","forEach","item","isoDate","Date","exDate","setDate","getDate","formattedDate","toISOString","slice","getSingleEx","id","createEx","extypeID","exAmount","post","updateEx","put","deleteEx","delete","deleteAllEx","getAllInc","getSingleInc","createInc","updateInc","deleteInc","getAllOverview","getSingleOverview","getExAmount","getIncAmount","getTotalAmount","getAllExType","getSingleExType","getAllIncType","getSingleIncType","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Software projects\\Project\\ANGULAR\\aboutMoney-angular\\frontend\\src\\app\\apiservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable  } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst apiExpenses = 'http://localhost:3000/ex';\nconst apiIncome = 'http://localhost:3000/inc';\nconst apiOverview = 'http://localhost:3000/overview';\n\nconst apiExType = 'http://localhost:3000/extype';\nconst apiIncType = 'http://localhost:3000/inctype';\n\nconst apiExAmount = 'http://localhost:3000/ex_amount';\nconst apiIncAmount = 'http://localhost:3000/inc_amount';\nconst apiTotalAmount = 'http://localhost:3000/total_amount';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiserviceService {\n\n  constructor( private _http:HttpClient) { }\n\n  // EXPENSES\n  getAllEx(): Observable<any> {\n    return this._http.get(`${apiExpenses}`).pipe(\n      map((response: any) => {\n        // Format the date field to \"YYYY-MM-DD\" format\n        response.data.forEach((item: any) => {\n          // Convert the ISO date to a Date object\n          const isoDate = new Date(item.exDate);\n\n          isoDate.setDate(isoDate.getDate() + 1);\n\n          // Format the date as \"YYYY-MM-DD\"\n          const formattedDate = isoDate.toISOString().slice(0, 10);\n\n          item.exDate = formattedDate;\n        });\n\n        return response;\n      })\n    );\n  }\n  getSingleEx(id:any): Observable<any> {\n    return this._http.get(`${apiExpenses}/${id}`);\n  }\n  createEx(extypeID:number, exAmount:number): Observable<any> {\n    return this._http.post(`${apiExpenses}`, {extypeID, exAmount})\n  }\n  updateEx(data: any, id: any): Observable<any> {\n    return this._http.put(`${apiExpenses}/${id}`, data);\n  }\n  deleteEx(id: any): Observable<any> {\n    return this._http.delete(`${apiExpenses}/${id}`);\n  }\n  deleteAllEx(): Observable<any> {\n    return\n  }\n\n  // INCOME\n  getAllInc(): Observable<any> {\n    return this._http.get(`${apiIncome}`);\n  }\n  getSingleInc(id:any): Observable<any> {\n    return this._http.get(`${apiIncome}/${id}`);\n  }\n  createInc(data:any): Observable<any> {\n    return this._http.post(`${apiIncome}`, data)\n  }\n  updateInc(data: any, id: any): Observable<any> {\n    return this._http.put(`${apiIncome}/${id}`, data);\n  }\n  deleteInc(id: any): Observable<any> {\n    return this._http.delete(`${apiIncome}/${id}`);\n  }\n\n  // OVERVIEW\n  getAllOverview(): Observable<any> {\n    return this._http.get(`${apiOverview}`);\n  }\n  getSingleOverview(id:any): Observable<any> {\n    return this._http.get(`${apiOverview}/${id}`);\n  }\n\n  // AMOUNT\n  getExAmount(): Observable<any> {\n    return this._http.get(`${apiExAmount}`);\n  }\n  getIncAmount(): Observable<any> {\n    return this._http.get(`${apiIncAmount}`);\n  }\n  getTotalAmount(): Observable<any> {\n    return this._http.get(`${apiTotalAmount}`);\n  }\n\n  // DATA TYPE\n  // ------------------ Expenses type ------------------\n  getAllExType(): Observable<any> {\n    return this._http.get(`${apiExType}`);\n  }\n  getSingleExType(id:any): Observable<any> {\n    return this._http.get(`${apiExType}/${id}`);\n  }\n  // ------------------ Income type ------------------\n  getAllIncType(): Observable<any> {\n    return this._http.get(`${apiIncType}`);\n  }\n  getSingleIncType(id:any): Observable<any> {\n    return this._http.get(`${apiIncType}/${id}`);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}