{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst apiExpenses = 'http://localhost:3000/ex';\nconst apiIncome = 'http://localhost:3000/inc';\nconst apiOverview = 'http://localhost:3000/overview';\nconst apiExType = 'http://localhost:3000/extype';\nconst apiIncType = 'http://localhost:3000/inctype';\nconst apiExAmount = 'http://localhost:3000/ex_amount';\nconst apiIncAmount = 'http://localhost:3000/inc_amount';\nconst apiTotalAmount = 'http://localhost:3000/total_amount';\nexport class ApiserviceService {\n  constructor(_http) {\n    this._http = _http;\n  }\n  // EXPENSES\n  getAllEx() {\n    return this._http.get(`${apiExpenses}`).pipe(map(response => {\n      // Format the date field to \"YYYY-MM-DD\" format\n      response.data.forEach(item => {\n        // Convert the ISO date to a Date object\n        const isoDate = new Date(item.exDate);\n        // Format the date as \"YYYY-MM-DD\"\n        const formattedDate = isoDate.toISOString().slice(0, 10);\n        item.exDate = formattedDate;\n      });\n      return response;\n    }));\n    getSingleEx(id, any);\n    Observable < any > {\n      return: this._http.get(`${apiExpenses}/${id}`)\n    };\n    createEx(data, any);\n    Observable < any > {\n      return: this._http.post(`${apiExpenses}`, data)\n    };\n    updateEx(data, any, id, any);\n    Observable < any > {\n      return: this._http.put(`${apiExpenses}/${id}`, data)\n    };\n    deleteEx(id, any);\n    Observable < any > {\n      return: this._http.delete(`${apiExpenses}/${id}`)\n    };\n    // INCOME\n    getAllInc();\n    Observable < any > {\n      return: this._http.get(`${apiIncome}`)\n    };\n    getSingleInc(id, any);\n    Observable < any > {\n      return: this._http.get(`${apiIncome}/${id}`)\n    };\n    createInc(data, any);\n    Observable < any > {\n      return: this._http.post(`${apiIncome}`, data)\n    };\n    updateInc(data, any, id, any);\n    Observable < any > {\n      return: this._http.put(`${apiIncome}/${id}`, data)\n    };\n    deleteInc(id, any);\n    Observable < any > {\n      return: this._http.delete(`${apiIncome}/${id}`)\n    };\n    // OVERVIEW\n    getAllOverview();\n    Observable < any > {\n      return: this._http.get(`${apiOverview}`)\n    };\n    getSingleOverview(id, any);\n    Observable < any > {\n      return: this._http.get(`${apiOverview}/${id}`)\n    };\n    // AMOUNT\n    getExAmount();\n    Observable < any > {\n      return: this._http.get(`${apiExAmount}`)\n    };\n    getIncAmount();\n    Observable < any > {\n      return: this._http.get(`${apiIncAmount}`)\n    };\n    getTotalAmount();\n    Observable < any > {\n      return: this._http.get(`${apiTotalAmount}`)\n    };\n    // DATA TYPE\n    // ------------------ Expenses type ------------------\n    getAllExType();\n    Observable < any > {\n      return: this._http.get(`${apiExType}`)\n    };\n    getSingleExType(id, any);\n    Observable < any > {\n      return: this._http.get(`${apiExType}/${id}`)\n    };\n    // ------------------ Income type ------------------\n    getAllIncType();\n    Observable < any > {\n      return: this._http.get(`${apiIncType}`)\n    };\n    getSingleIncType(id, any);\n    Observable < any > {\n      return: this._http.get(`${apiIncType}/${id}`)\n    };\n  }\n  static #_ = this.ɵfac = function ApiserviceService_Factory(t) {\n    return new (t || ApiserviceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiserviceService,\n    factory: ApiserviceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Observable","map","apiExpenses","apiIncome","apiOverview","apiExType","apiIncType","apiExAmount","apiIncAmount","apiTotalAmount","ApiserviceService","constructor","_http","getAllEx","get","pipe","response","data","forEach","item","isoDate","Date","exDate","formattedDate","toISOString","slice","getSingleEx","id","any","return","createEx","post","updateEx","put","deleteEx","delete","getAllInc","getSingleInc","createInc","updateInc","deleteInc","getAllOverview","getSingleOverview","getExAmount","getIncAmount","getTotalAmount","getAllExType","getSingleExType","getAllIncType","getSingleIncType","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Software projects\\Project\\ANGULAR\\aboutMoney-angular\\frontend\\src\\app\\apiservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable  } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst apiExpenses = 'http://localhost:3000/ex';\nconst apiIncome = 'http://localhost:3000/inc';\nconst apiOverview = 'http://localhost:3000/overview';\n\nconst apiExType = 'http://localhost:3000/extype';\nconst apiIncType = 'http://localhost:3000/inctype';\n\nconst apiExAmount = 'http://localhost:3000/ex_amount';\nconst apiIncAmount = 'http://localhost:3000/inc_amount';\nconst apiTotalAmount = 'http://localhost:3000/total_amount';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiserviceService {\n\n  constructor( private _http:HttpClient) { }\n\n  // EXPENSES\n  getAllEx(): Observable<any> {\n    return this._http.get(`${apiExpenses}`).pipe(\n      map((response: any) => {\n        // Format the date field to \"YYYY-MM-DD\" format\n        response.data.forEach((item: any) => {\n          // Convert the ISO date to a Date object\n          const isoDate = new Date(item.exDate);\n\n          // Format the date as \"YYYY-MM-DD\"\n          const formattedDate = isoDate.toISOString().slice(0, 10);\n\n          item.exDate = formattedDate;\n        });\n\n        return response;\n      })\n    );\n  getSingleEx(id:any): Observable<any> {\n    return this._http.get(`${apiExpenses}/${id}`);\n  }\n  createEx(data:any): Observable<any> {\n    return this._http.post(`${apiExpenses}`, data)\n  }\n  updateEx(data: any, id: any): Observable<any> {\n    return this._http.put(`${apiExpenses}/${id}`, data);\n  }\n  deleteEx(id: any): Observable<any> {\n    return this._http.delete(`${apiExpenses}/${id}`);\n  }\n\n  // INCOME\n  getAllInc(): Observable<any> {\n    return this._http.get(`${apiIncome}`);\n  }\n  getSingleInc(id:any): Observable<any> {\n    return this._http.get(`${apiIncome}/${id}`);\n  }\n  createInc(data:any): Observable<any> {\n    return this._http.post(`${apiIncome}`, data)\n  }\n  updateInc(data: any, id: any): Observable<any> {\n    return this._http.put(`${apiIncome}/${id}`, data);\n  }\n  deleteInc(id: any): Observable<any> {\n    return this._http.delete(`${apiIncome}/${id}`);\n  }\n\n  // OVERVIEW\n  getAllOverview(): Observable<any> {\n    return this._http.get(`${apiOverview}`);\n  }\n  getSingleOverview(id:any): Observable<any> {\n    return this._http.get(`${apiOverview}/${id}`);\n  }\n\n  // AMOUNT\n  getExAmount(): Observable<any> {\n    return this._http.get(`${apiExAmount}`);\n  }\n  getIncAmount(): Observable<any> {\n    return this._http.get(`${apiIncAmount}`);\n  }\n  getTotalAmount(): Observable<any> {\n    return this._http.get(`${apiTotalAmount}`);\n  }\n\n  // DATA TYPE\n  // ------------------ Expenses type ------------------\n  getAllExType(): Observable<any> {\n    return this._http.get(`${apiExType}`);\n  }\n  getSingleExType(id:any): Observable<any> {\n    return this._http.get(`${apiExType}/${id}`);\n  }\n  // ------------------ Income type ------------------\n  getAllIncType(): Observable<any> {\n    return this._http.get(`${apiIncType}`);\n  }\n  getSingleIncType(id:any): Observable<any> {\n    return this._http.get(`${apiIncType}/${id}`);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}